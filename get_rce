#!/usr/bin/env bash
echo 'Initialization...'

# defaults
BRANCH=develop
CUR_DIR=`pwd`
TARGET_PATH=$CUR_DIR

. $CUR_DIR/colors


npm init -fy >/dev/null 2>&1
npm install ttab >/dev/null 2>&1
REGISTRY=`npm config get registry`
npm config set registry http://npm.dev.wixpress.com

# params parsed
while getopts "p:b:" opt; do
  case ${opt} in
    p )
      TARGET_PATH=$OPTARG
      ;;
    b )
      BRANCH=$OPTARG
      ;;
    [?] )
        NAME=`basename "$0"`
        echo "Usage: $NAME [-p path] [-b branch]"
        exit 0
        ;;
   esac
done

echo "The 'rich-content' environment based on branch '$BRANCH' will be built at '$TARGET_PATH'"
while true; do
  echo "Shall we proceed? [y/n]"
  read RESPONSE
  if [ "$RESPONSE" = 'y' -o "$RESPONSE" = 'Y' ]
  then
    # check if target is not a git repo
    mkdir -p $TARGET_PATH
    if [ -d $TARGET_PATH/.git ]
    then
      echo "${red}Error: $TARGET_PATH is a Git repo.${default}"
      exit 1
    else
      # test branch existence
      git ls-remote --heads git@github.com:wix-incubator/rich-content.git $BRANCH | grep $BRANCH >/dev/null 2>&1
      if [ "$?" == "1" ]
      then
        echo "${red}Error: '$BRANCH' branch does not exist on remote${default}"
        exit 1
      fi
      # clone and checkout
      git clone git@github.com:wix-incubator/rich-content.git $TARGET_PATH/rich-content && cd $TARGET_PATH/rich-content && git checkout $BRANCH
      if [ "$?" == "0" ]
      then
        echo "${green}Success: the 'rich-content' repo is cloned. Proceed to build? [y/n]${default}"
        read SHOULD_BUILD
        if [ "$SHOULD_BUILD" = 'y' -o "$SHOULD_BUILD" = 'Y' ]
        then
          # build
          npm install && npm run build
          if [ "$?" == "0" ]
          then
            echo ${green}"Success: the 'rich-content' build complete. Proceed to examples? [y/n]${default}"
            read SHOULD_RUN
            if [ "$SHOULD_RUN" = 'y' -o "$SHOULD_RUN" = 'Y' ]
            then
              # remove existing links
              rm ~/.config/yarn/link/wix-rich-content-*
              # build and run both editor and viewer
              npx ttab 'cd ./examples/editor >/dev/null 2>&1 && yarn && yarn start'
              npx ttab 'cd ./examples/viewer>/dev/null 2>&1 && yarn && yarn start'
            else
              echo 'bye!'
              exit 0
            fi
          else
            echo "${red}Error: build failed${default}"
            exit 1
          fi
        else
          echo 'bye!'
          exit 0
        fi
      else
        echo "${red}Error: clone failed${default}"
        exit 1
      fi
    fi
    exit 0
  elif [ "$RESPONSE" = 'n' -o "$RESPONSE" = 'N' ]
  then
    echo 'bye!'
    exit 0
  fi
done

npm config set registry $REGISTRY
